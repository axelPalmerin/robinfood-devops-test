 /* Jenkins declarative CI pipeline */

pipeline {
  /* Running the pipeline on docker slave node */
  agent { label 'slaveNode1' }

  environment {
      imageName = "axelherrera/pytest"
      def dockerImage = ''
    }

  stages {
    stage('clean workspace') {
      steps { cleanWs() }
    }
    /* Clone de repo */
    stage('Checkout SCM') {
      steps {
        git branch: 'develop',
        url: 'git@github.com:axelPalmerin/robinfood-devops-test.git'
      }
    }

    /* Get into coding dir then build ther image */
    stage('Build image') {
      steps{
        script {
            dockerImage = docker.build("${imageName}:${env.BUILD_ID}",
            "./coding/checkSystemService")
        }
      }
    }
    /* Push image to registry */
    stage('Push image') {
      steps {
        script {
          docker.withRegistry('', 'dockerhub_id') {
            dockerImage.push("${BUILD_NUMBER}")
            dockerImage.push('latest')
          }
        }
      }
    }
    stage('Cleaning up') {
      steps{
        sh "docker rmi '${imageName}:${BUILD_NUMBER}'"
        sh "docker rmi '${imageName}:latest'"
      }
    }
  }
  post {
      always {
        cleanWs()
      }
    }
}
